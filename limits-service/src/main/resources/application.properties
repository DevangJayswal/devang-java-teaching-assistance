# as of now app name i.e. `limits-service` and [Git Repo] property file name `limits-service.properties`
# is same. If you want to use different name for our property file then we can use below configuration
# Name of application used to fetch remote properties.
spring.cloud.config.name=random-test

# use below one if `spring.profiles.active=dev` doesn't work
#spring.cloud.config.profile=dev

#spring.profiles.active=dev

#we would want this application to make use of limits-service.properties [Git Repo]
# [Git Repo] is already connected with Config Server
spring.application.name=limits-service

limits-service.minimum=3
limits-service.maximum=997

#whenever we are making use of spring-cloud-starter-config [Config Client] in our pom.xml
#what we need to do is to configure how spring-cloud-starter-config [Config Client] needs to connect to Spring Cloud Config Server
# specifying how Config Client needs to connect with Config Server
# right now we don't have the Config Server running, that's we would specify
# optional:configserver:http://localhost:8888
# so this is the configuration we are making saying that this is the Config Server, however Config Server
# connection is optional.
spring.config.import=optional:configserver:http://localhost:8888

