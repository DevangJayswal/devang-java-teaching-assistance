# Spring Cloud Gateway
# Simple, yet effective way to route APIs
# Provide cross cutting concerns:
#    Security
#    Monitoring/metrics
# Built on top of Spring WebFlux (Reactive Approach)
# ** Features:
#    Match routes on any request attribute
#    Define Predicates and Filters
#    Integrates with Spring Cloud Discovery Client (Load Balancing)
#    Path Rewriting

# building custom routes

# to have urls in lowercase
#spring.cloud.gateway.discovery.locator.lowerCaseServiceId=true

# http://localhost:[api_gateway_port]/[app_name_from_eureka_server]/[url_to_call_on_app]
# what we are doing here that we want api-gateway to talk to naming-server with app_name_from_eureka_server
# and execute request to above url
# However we will have to enable this feature using below configuration. Otherwise we will get an error
# saying not found
#spring.cloud.gateway.discovery.locator.enabled=true

# in order to connect our microservice to eureka naming server we just need to add
# `spring-cloud-starter-netflix-eureka-client` in pom.xml
# however, to be on safer side we would typically configure the url of naming server eureka
# following is the configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

spring.application.name=api-gateway
server.port=8765
